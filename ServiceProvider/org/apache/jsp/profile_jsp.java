/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2025-07-20 16:59:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.HttpSession;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    HttpSession saession = request.getSession(false);
    String userEmail = (saession != null) ? (String) saession.getAttribute("userEmail") : null;

    if (userEmail == null) {
        response.sendRedirect("login.jsp");
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Update Profile</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>Update Your Profile</h2>\r\n");
      out.write("\r\n");
      out.write("    <form method=\"post\" action=\"UpdateProfileServlet\" enctype=\"multipart/form-data\">\r\n");
      out.write("        <label>Name:</label><br/>\r\n");
      out.write("        <input type=\"text\" name=\"name\" required /><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Email:</label><br/>\r\n");
      out.write("        <input type=\"email\" name=\"email\" value=\"");
      out.print( userEmail );
      out.write("\" required /><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Password:</label><br/>\r\n");
      out.write("        <input type=\"password\" name=\"password\" required /><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Gender:</label><br/>\r\n");
      out.write("        <select name=\"gender\" required>\r\n");
      out.write("            <option value=\"Male\">Male</option>\r\n");
      out.write("            <option value=\"Female\">Female</option>\r\n");
      out.write("            <option value=\"Other\">Other</option>\r\n");
      out.write("        </select><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Address:</label><br/>\r\n");
      out.write("        <textarea name=\"address\" rows=\"3\" cols=\"30\" required></textarea><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Contact:</label><br/>\r\n");
      out.write("        <input type=\"text\" name=\"contact\" required /><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Food Preference:</label><br/>\r\n");
      out.write("        <select name=\"food\" required>\r\n");
      out.write("            <option value=\"Veg\">Veg</option>\r\n");
      out.write("            <option value=\"Non-Veg\">Non-Veg</option>\r\n");
      out.write("        </select><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <label>Upload Photo:</label><br/>\r\n");
      out.write("        <input type=\"file\" name=\"photo\" accept=\"image/*\" /><br/><br/>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"Update Profile\" />\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <br/>\r\n");
      out.write("    <a href=\"userDashboard.jsp\">â¬… Back to Dashboard</a>\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");

        String status = request.getParameter("status");
        if (status != null) {
            if (status.equals("updated")) {
                out.println("<p style='color:green;'>Profile updated successfully!</p>");
            } else if (status.equals("fail")) {
                out.println("<p style='color:red;'>Update failed. Try again.</p>");
            } else if (status.equals("error")) {
                out.println("<p style='color:red;'>Something went wrong!</p>");
            }
        }
    
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
